//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//															//
//															//
//	Static inelastic reinforced concrete frame									//
//															//
//															//
//  	Stevan Gavrilovic, University of British Columbia								//
//															//
//  	All units in N, m, kg, Pa											//
//															//
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//**** Integrator ****

// The DeltaLambda parameter can be used along with the MaxSteps parameter in the structural analysis method to apply a fraction of the total load to the structure
// The load is applied incrementally by adding DeltaLambda*Load at every step
// The fraction of the total load applied at the end of the analysis will be DeltaLambda*NumberIncrements
// For example, if you want the final load to be 0.6 of the total load, set DeltaLambda:0.1 and NumberIncrements:6
RLoadControlIntegrator |ObjectName: theIntegrator |DeltaLambda: 0.1 |NumberIncrements: 10


//**** Constraint Handler ****

RTransformationConstraintHandler |ObjectName: theConstraintHandler


//**** DOF Numberer ****

RDOFNumberer |ObjectName: theDOFNumberer |NumberingScheme: RCM


//**** Convergence Test ****

RCTestNormDispIncr |ObjectName: theConvergenceTest |Tolerance: 1.0e-6 |MaxNumberIncrements: 250


//**** Solver ****

RMumpsParallelSOE |ObjectName: theSolver


//**** Equation Solution Algorithm ****

RKrylovNewtonEquationSolutionAlgorithm |ObjectName: theSolutionAlgo |ConvergenceTest: theConvergenceTest


//**** Hazards and Loading [N] ****

RContinuousRandomVariable |ObjectName: pointLoadParameter |DistributionType: Normal (mean, stdv) |Mean: 10000 |StandardDeviation: 100
RPointLoad |ObjectName: pointLoad |InputParameter: pointLoadParameter

RLinearSeries |ObjectName: theTimeSeries 
RLoadPattern |ObjectName: theLoadPattern |TimeSeries: theTimeSeries


//**** Boundary Conditions ****

RPoint |ObjectName: pointA |XCoordinate: -10 |YCoordinate: -10 |ZCoordinate: 0
RPoint |ObjectName: pointB |XCoordinate:  10 |YCoordinate: -10 |ZCoordinate: 0 
RPoint |ObjectName: pointC |XCoordinate:  10 |YCoordinate:  10 |ZCoordinate: 0 
RPoint |ObjectName: pointD |XCoordinate: -10 |YCoordinate:  10 |ZCoordinate: 0 

RFixedPlaneBoundaryCondition |ObjectName: ground |Point1: pointA |Point2: pointB |Point3: pointC |Point4: pointD


//**** Component Geometry [m] ****

RConstant |ObjectName: columnHeight |CurrentValue: 8.0 
RConstant |ObjectName: beamLength |CurrentValue: 4.0 
RConstant |ObjectName: theWidth |CurrentValue: 0.25
RConstant |ObjectName: theDepth |CurrentValue: 0.25


RPoint |ObjectName: point1 |XCoordinate: 0 |YCoordinate: 0 |ZCoordinate: 0
RPoint |ObjectName: point2 |XCoordinate: 0 |YCoordinate: 0 |ZCoordinate: columnHeight |YForce: pointLoad
RPoint |ObjectName: point3 |XCoordinate: beamLength |YCoordinate: 0 |ZCoordinate: 0
RPoint |ObjectName: point4 |XCoordinate: beamLength |YCoordinate: 0 |ZCoordinate: columnHeight |XForce: pointLoad


//**** Components ****

RRectangularRCColumnComponent |ObjectName: column1 |Point1: point1 |Point2: point2 |Orientation: 0.0 |CrossSectionDepth: theDepth |CrossSectionWidth: theWidth |MeshOption:2 |Orientation: 0
RRectangularRCColumnComponent |ObjectName: column2 |Point1: point3 |Point2: point4 |Orientation: 0.0 |CrossSectionDepth: theDepth |CrossSectionWidth: theWidth |MeshOption:2 |Orientation: 0
RRectangularRCColumnComponent |ObjectName: beam |Point1: point2 |Point2: point4 |Orientation: 0.0 |CrossSectionDepth: theDepth |CrossSectionWidth: theWidth |MeshOption:2 |Orientation: 0


//**** Structural Analysis Method ****

RInelasticStaticStructuralAnalysis |ObjectName: theStructuralAnalysisType |OutputLevel: Maximum |ConstraintHandler: theConstraintHandler |DOFNumberer: theDOFNumberer |LinearSOESolver: theSolver |Integrator: theIntegrator |ConvergenceTest: theConvergenceTest |EquationSolutionAlgorithm: theSolutionAlgo 


//*************************************************************************************
//********************************** ORCHESTRATING MODELS *****************************
//*************************************************************************************


// Structural Analysis Model
RStructuralAnalysisModel |ObjectName: theSAModel |StructuralAnalysis: theStructuralAnalysisType |LoadPattern: theLoadPattern 






