/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcFurnitureTypeEnum = ENUMERATION OF	(CHAIR	,TABLE	,DESK	,BED	,FILECABINET	,SHELF	,SOFA	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcFurnitureTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcFurnitureTypeEnumEnum
	{
		ENUM_CHAIR,
		ENUM_TABLE,
		ENUM_DESK,
		ENUM_BED,
		ENUM_FILECABINET,
		ENUM_SHELF,
		ENUM_SOFA,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcFurnitureTypeEnum();
	IfcFurnitureTypeEnum( IfcFurnitureTypeEnumEnum e ) { m_enum = e; }
	~IfcFurnitureTypeEnum();
	virtual const char* className() const { return "IfcFurnitureTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcFurnitureTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcFurnitureTypeEnumEnum m_enum;
};

