/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcVoidingFeatureTypeEnum = ENUMERATION OF	(CUTOUT	,NOTCH	,HOLE	,MITER	,CHAMFER	,EDGE	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcVoidingFeatureTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcVoidingFeatureTypeEnumEnum
	{
		ENUM_CUTOUT,
		ENUM_NOTCH,
		ENUM_HOLE,
		ENUM_MITER,
		ENUM_CHAMFER,
		ENUM_EDGE,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcVoidingFeatureTypeEnum();
	IfcVoidingFeatureTypeEnum( IfcVoidingFeatureTypeEnumEnum e ) { m_enum = e; }
	~IfcVoidingFeatureTypeEnum();
	virtual const char* className() const { return "IfcVoidingFeatureTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcVoidingFeatureTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcVoidingFeatureTypeEnumEnum m_enum;
};

