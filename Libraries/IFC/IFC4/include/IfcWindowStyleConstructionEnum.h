/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcWindowStyleConstructionEnum = ENUMERATION OF	(ALUMINIUM	,HIGH_GRADE_STEEL	,STEEL	,WOOD	,ALUMINIUM_WOOD	,PLASTIC	,OTHER_CONSTRUCTION	,NOTDEFINED);
class IFCPP_EXPORT IfcWindowStyleConstructionEnum : virtual public IfcPPObject
{
public:
	enum IfcWindowStyleConstructionEnumEnum
	{
		ENUM_ALUMINIUM,
		ENUM_HIGH_GRADE_STEEL,
		ENUM_STEEL,
		ENUM_WOOD,
		ENUM_ALUMINIUM_WOOD,
		ENUM_PLASTIC,
		ENUM_OTHER_CONSTRUCTION,
		ENUM_NOTDEFINED
	};

	IfcWindowStyleConstructionEnum();
	IfcWindowStyleConstructionEnum( IfcWindowStyleConstructionEnumEnum e ) { m_enum = e; }
	~IfcWindowStyleConstructionEnum();
	virtual const char* className() const { return "IfcWindowStyleConstructionEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcWindowStyleConstructionEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcWindowStyleConstructionEnumEnum m_enum;
};

