/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcMechanicalFastenerTypeEnum = ENUMERATION OF	(ANCHORBOLT	,BOLT	,DOWEL	,NAIL	,NAILPLATE	,RIVET	,SCREW	,SHEARCONNECTOR	,STAPLE	,STUDSHEARCONNECTOR	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcMechanicalFastenerTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcMechanicalFastenerTypeEnumEnum
	{
		ENUM_ANCHORBOLT,
		ENUM_BOLT,
		ENUM_DOWEL,
		ENUM_NAIL,
		ENUM_NAILPLATE,
		ENUM_RIVET,
		ENUM_SCREW,
		ENUM_SHEARCONNECTOR,
		ENUM_STAPLE,
		ENUM_STUDSHEARCONNECTOR,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcMechanicalFastenerTypeEnum();
	IfcMechanicalFastenerTypeEnum( IfcMechanicalFastenerTypeEnumEnum e ) { m_enum = e; }
	~IfcMechanicalFastenerTypeEnum();
	virtual const char* className() const { return "IfcMechanicalFastenerTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcMechanicalFastenerTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcMechanicalFastenerTypeEnumEnum m_enum;
};

