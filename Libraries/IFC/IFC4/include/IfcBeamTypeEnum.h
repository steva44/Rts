/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcBeamTypeEnum = ENUMERATION OF	(BEAM	,JOIST	,HOLLOWCORE	,LINTEL	,SPANDREL	,T_BEAM	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcBeamTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcBeamTypeEnumEnum
	{
		ENUM_BEAM,
		ENUM_JOIST,
		ENUM_HOLLOWCORE,
		ENUM_LINTEL,
		ENUM_SPANDREL,
		ENUM_T_BEAM,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcBeamTypeEnum();
	IfcBeamTypeEnum( IfcBeamTypeEnumEnum e ) { m_enum = e; }
	~IfcBeamTypeEnum();
	virtual const char* className() const { return "IfcBeamTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcBeamTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcBeamTypeEnumEnum m_enum;
};

