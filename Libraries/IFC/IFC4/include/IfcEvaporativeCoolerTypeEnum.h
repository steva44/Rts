/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcEvaporativeCoolerTypeEnum = ENUMERATION OF	(DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER	,DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER	,DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER	,DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER	,DIRECTEVAPORATIVEAIRWASHER	,INDIRECTEVAPORATIVEPACKAGEAIRCOOLER	,INDIRECTEVAPORATIVEWETCOIL	,INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER	,INDIRECTDIRECTCOMBINATION	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcEvaporativeCoolerTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcEvaporativeCoolerTypeEnumEnum
	{
		ENUM_DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER,
		ENUM_DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER,
		ENUM_DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER,
		ENUM_DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER,
		ENUM_DIRECTEVAPORATIVEAIRWASHER,
		ENUM_INDIRECTEVAPORATIVEPACKAGEAIRCOOLER,
		ENUM_INDIRECTEVAPORATIVEWETCOIL,
		ENUM_INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER,
		ENUM_INDIRECTDIRECTCOMBINATION,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcEvaporativeCoolerTypeEnum();
	IfcEvaporativeCoolerTypeEnum( IfcEvaporativeCoolerTypeEnumEnum e ) { m_enum = e; }
	~IfcEvaporativeCoolerTypeEnum();
	virtual const char* className() const { return "IfcEvaporativeCoolerTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcEvaporativeCoolerTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcEvaporativeCoolerTypeEnumEnum m_enum;
};

