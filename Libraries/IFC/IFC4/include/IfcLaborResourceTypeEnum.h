/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcLaborResourceTypeEnum = ENUMERATION OF	(ADMINISTRATION	,CARPENTRY	,CLEANING	,CONCRETE	,DRYWALL	,ELECTRIC	,FINISHING	,FLOORING	,GENERAL	,HVAC	,LANDSCAPING	,MASONRY	,PAINTING	,PAVING	,PLUMBING	,ROOFING	,SITEGRADING	,STEELWORK	,SURVEYING	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcLaborResourceTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcLaborResourceTypeEnumEnum
	{
		ENUM_ADMINISTRATION,
		ENUM_CARPENTRY,
		ENUM_CLEANING,
		ENUM_CONCRETE,
		ENUM_DRYWALL,
		ENUM_ELECTRIC,
		ENUM_FINISHING,
		ENUM_FLOORING,
		ENUM_GENERAL,
		ENUM_HVAC,
		ENUM_LANDSCAPING,
		ENUM_MASONRY,
		ENUM_PAINTING,
		ENUM_PAVING,
		ENUM_PLUMBING,
		ENUM_ROOFING,
		ENUM_SITEGRADING,
		ENUM_STEELWORK,
		ENUM_SURVEYING,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcLaborResourceTypeEnum();
	IfcLaborResourceTypeEnum( IfcLaborResourceTypeEnumEnum e ) { m_enum = e; }
	~IfcLaborResourceTypeEnum();
	virtual const char* className() const { return "IfcLaborResourceTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcLaborResourceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcLaborResourceTypeEnumEnum m_enum;
};

