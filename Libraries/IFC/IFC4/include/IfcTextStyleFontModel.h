/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */
#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"
#include "IfcPreDefinedTextFont.h"
class IFCPP_EXPORT IfcTextFontName;
class IFCPP_EXPORT IfcFontStyle;
class IFCPP_EXPORT IfcFontVariant;
class IFCPP_EXPORT IfcFontWeight;
class IFCPP_EXPORT IfcSizeSelect;
//ENTITY
class IFCPP_EXPORT IfcTextStyleFontModel : public IfcPreDefinedTextFont
{ 
public:
	IfcTextStyleFontModel();
	IfcTextStyleFontModel( int id );
	~IfcTextStyleFontModel();
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepLine( std::stringstream& stream ) const;
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual void readStepArguments( const std::vector<std::wstring>& args, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	virtual void setInverseCounterparts( shared_ptr<IfcPPEntity> ptr_self );
	virtual size_t getNumAttributes() { return 6; }
	virtual void getAttributes( std::vector<std::pair<std::string, shared_ptr<IfcPPObject> > >& vec_attributes );
	virtual void getAttributesInverse( std::vector<std::pair<std::string, shared_ptr<IfcPPObject> > >& vec_attributes );
	virtual void unlinkFromInverseCounterparts();
	virtual const char* className() const { return "IfcTextStyleFontModel"; }
	virtual const std::wstring toString() const;


	// IfcPresentationItem -----------------------------------------------------------

	// IfcPreDefinedItem -----------------------------------------------------------
	// attributes:
	//  shared_ptr<IfcLabel>						m_Name;

	// IfcPreDefinedTextFont -----------------------------------------------------------

	// IfcTextStyleFontModel -----------------------------------------------------------
	// attributes:
	std::vector<shared_ptr<IfcTextFontName> >	m_FontFamily;
	shared_ptr<IfcFontStyle>					m_FontStyle;				//optional
	shared_ptr<IfcFontVariant>					m_FontVariant;				//optional
	shared_ptr<IfcFontWeight>					m_FontWeight;				//optional
	shared_ptr<IfcSizeSelect>					m_FontSize;
};

