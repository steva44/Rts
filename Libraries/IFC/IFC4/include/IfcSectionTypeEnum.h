/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcSectionTypeEnum = ENUMERATION OF	(UNIFORM	,TAPERED);
class IFCPP_EXPORT IfcSectionTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcSectionTypeEnumEnum
	{
		ENUM_UNIFORM,
		ENUM_TAPERED
	};

	IfcSectionTypeEnum();
	IfcSectionTypeEnum( IfcSectionTypeEnumEnum e ) { m_enum = e; }
	~IfcSectionTypeEnum();
	virtual const char* className() const { return "IfcSectionTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcSectionTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcSectionTypeEnumEnum m_enum;
};

