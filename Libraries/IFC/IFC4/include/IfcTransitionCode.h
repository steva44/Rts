/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcTransitionCode = ENUMERATION OF	(DISCONTINUOUS	,CONTINUOUS	,CONTSAMEGRADIENT	,CONTSAMEGRADIENTSAMECURVATURE);
class IFCPP_EXPORT IfcTransitionCode : virtual public IfcPPObject
{
public:
	enum IfcTransitionCodeEnum
	{
		ENUM_DISCONTINUOUS,
		ENUM_CONTINUOUS,
		ENUM_CONTSAMEGRADIENT,
		ENUM_CONTSAMEGRADIENTSAMECURVATURE
	};

	IfcTransitionCode();
	IfcTransitionCode( IfcTransitionCodeEnum e ) { m_enum = e; }
	~IfcTransitionCode();
	virtual const char* className() const { return "IfcTransitionCode"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcTransitionCode> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcTransitionCodeEnum m_enum;
};

