/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "IfcPPBasicTypes.h"
#include "IfcPPObject.h"
#include "IfcPPGlobal.h"

// TYPE IfcTaskDurationEnum = ENUMERATION OF	(ELAPSEDTIME	,WORKTIME	,NOTDEFINED);
class IFCPP_EXPORT IfcTaskDurationEnum : virtual public IfcPPObject
{
public:
	enum IfcTaskDurationEnumEnum
	{
		ENUM_ELAPSEDTIME,
		ENUM_WORKTIME,
		ENUM_NOTDEFINED
	};

	IfcTaskDurationEnum();
	IfcTaskDurationEnum( IfcTaskDurationEnumEnum e ) { m_enum = e; }
	~IfcTaskDurationEnum();
	virtual const char* className() const { return "IfcTaskDurationEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcTaskDurationEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
	IfcTaskDurationEnumEnum m_enum;
};

