/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#include <sstream>
#include <limits>
#include <map>
#include "reader/ReaderUtil.h"
#include "writer/WriterUtil.h"
#include "model/IfcPPBasicTypes.h"
#include "model/IfcPPException.h"
#include "IFC4/include/IfcPropertySetDefinitionSelect.h"
#include "IFC4/include/IfcPropertySetDefinition.h"
#include "IFC4/include/IfcPropertySetDefinitionSet.h"

// TYPE IfcPropertySetDefinitionSet = SET [1:?] OF IfcPropertySetDefinition;
IfcPropertySetDefinitionSet::IfcPropertySetDefinitionSet() {}
IfcPropertySetDefinitionSet::~IfcPropertySetDefinitionSet() {}
shared_ptr<IfcPPObject> IfcPropertySetDefinitionSet::getDeepCopy( IfcPPCopyOptions& options )
{
	shared_ptr<IfcPropertySetDefinitionSet> copy_self( new IfcPropertySetDefinitionSet() );
	for( size_t ii=0; ii<m_vec.size(); ++ii )
	{
		auto item_ii = m_vec[ii];
		if( item_ii )
		{
			copy_self->m_vec.push_back( dynamic_pointer_cast<IfcPropertySetDefinition>( item_ii->getDeepCopy( options ) ) );
		}
	}
	return copy_self;
}
void IfcPropertySetDefinitionSet::getStepParameter( std::stringstream& stream, bool is_select_type ) const
{
	if( is_select_type ) { stream << "IFCPROPERTYSETDEFINITIONSET("; }
	writeEntityList( stream, m_vec );
	if( is_select_type ) { stream << ")"; }
}
const std::wstring IfcPropertySetDefinitionSet::toString() const
{
	std::wstring result_str;
	for( size_t ii = 0; ii < m_vec.size(); ++ii )
	{
		if( ii > 0 )
		{
			result_str.append( L", " );
		}
		if( m_vec[ii]  )
		{
			result_str.append( m_vec[ii]->toString() );
		}
	}
	return result_str; 
}
shared_ptr<IfcPropertySetDefinitionSet> IfcPropertySetDefinitionSet::createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map )
{
	if( arg.compare( L"$" ) == 0 ) { return shared_ptr<IfcPropertySetDefinitionSet>(); }
	else if( arg.compare( L"*" ) == 0 ) { return shared_ptr<IfcPropertySetDefinitionSet>(); }
	shared_ptr<IfcPropertySetDefinitionSet> type_object( new IfcPropertySetDefinitionSet() );
	readEntityReferenceList(  arg, type_object->m_vec, map );
	return type_object;
}
